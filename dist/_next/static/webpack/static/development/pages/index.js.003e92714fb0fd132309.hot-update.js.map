{"version":3,"file":"static/webpack/static/development/pages/index.js.003e92714fb0fd132309.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { store, view } from '@risingstack/react-easy-state';\n\n\nclass Counter extends React.Component {\n  counter = store({\n    num: 0,\n    increment: () => this.counter.num++,\n    decrement: () => this.counter.num--,\n  });\n\n  componentDidMount() {\n    this.autoUpdate();\n  }\n  \n  // componentDidUpdate() {\n  //   setTimeout(this.autoUpdate.bind(this), 360000000);\n  // }\n\n  state = { search: '' }\n  handleChange = (event) => {\n    /**\n     * This is a simple implementation of a \"debounce\" function,\n     * which will queue an expression to be called in 250ms and\n     * cancel any pending queued expressions. This way we can\n     * delay the call 250ms after the user has stoped typing.\n     */\n    const searchTerm = event.target.value;\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.setState({\n        search: searchTerm\n      })\n    }, 250);\n  }\n\n  autoUpdate() {\n    const date = new Date();\n    const hour = date.getHours();\n    if (hour >= 9 && hour <= 17) {\n      this.counter.increment();\n    }\n    if (hour <= 8 || hour >= 18) {\n      this.counter.decrement();\n    }\n    // setTimeout(this.autoUpdate.bind(this), 3000);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Counter</h1>\n        <p>{this.counter.num}</p>\n\n        <button onClick={this.counter.increment}>+</button>\n        <button onClick={this.counter.decrement}>-</button>\n        \n        <br/><br/>\n        <input type=\"text\" onChange={this.handleChange} />\n        {this.state.search ? <p>Search for: {this.state.search}</p> : null}\n      </div>\n    );\n  }\n}\n\nexport default view(Counter);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAEA;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAcA;AAAA;AAAA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;;;;AAvBA;AACA;AACA;AAGA;AACA;AACA;;;AAkBA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;AA1DA;AACA;AA4DA;AACA;;;;;A","sourceRoot":""}